#+AUTHOR: Sebastian Meisel
#+DATE: <2022-06-29 Mi>
#+OPTIONS: :tangle no

* VM aus ISO Erstellen

Zunächst nutzen wir [[file+emacs:New-VMFromIso.org][New-VMFromIso.ps1]] um ein ISO-Image des
gewünschten OS herunterzuladen und zu starten. Für das
spätere Beispiel brauchen wir Templates für:

- [[* Ubuntu-Server 22.04][Ubuntu-Server 22.04]]
- [[* pfSense][pfSense]]
  
** Ubuntu-Server 22.04

#+BEGIN_SRC PS
  .\New-VMFromISO.ps1 Ubuntu_tmp `
   -ISO Ubuntu `
   -Url https://releases.ubuntu.com/20.04.4/ubuntu-20.04.4-live-server-amd64.iso `
   -ChkSum 28ccdb56450e643bad03bb7bcf7507ce3d8d90e8bf09e38f6bd9ac298a98eaad
#+END_SRC

Beachte folgende Einstellungen bei der Installation:

- *keine* Verschlüsselung aktivieren, da dies eine
  Passworteingabe beim Start nötig macht.
- Open-SSH aktivieren
- Hostname: templates

Nach dem Neustart installiere den Hyper-V-Integrationsservice mit dem Skript,
das du unter [[https://github.com/Hinara/linux-vm-tools/blob/ubuntu20-04/ubuntu/22.04/install.sh][https://github.com/Hinara/]] findest. Lies es dir durch bevor du es
mit folgendem Befehl in der VM ausführst:

#+BEGIN_SRC bash
  curl https://raw.githubusercontent.com/Hinara/linux-vm-tools/ubuntu20-04/ubuntu/22.04/install.sh | \
  sudo bash -
#+END_SRC

Es reicht aus, das Skript einmal auszuführen und neuzustarten. Wenn du es nach
dem Neustart nocheinmal ausführst werden Integrationsservices für den X-Server
installiert. Das solltest du aber nur tun, wenn du einen Desktop nutzen
möchtest, da als Abhängigkeit alle möglichen X11-Packete installiert werden, die
du auf einem Server vermutlich nicht möchstest.


** pfSense

*** Installation
pfSense ist eine auf BSD (nicht Linux!) basierendes Router- und Firewall-OS.
Du kannst [[New-pfSense.org][New-pfSense.ps1]] benutzen, um dass ISO-Image herunterzuladen, zu
entpacken und die Installation zu starten.

[[./Pictures/pfSense_start_installation.png]]

*** Firewall Grundkonfiguration

Folge den Anweisungen. Nach dem Neustart muss zunächst der Packetfilter
deaktiviert werden, damit eine Konfiguration aus dem WAN (vom Host aus) möglich
ist. Dazu musst du dich im Hyper-V-manager mit der VM verbinden und im
angezeigten Menü, "8" wählen, um in den Shell-Modus zu gelangen.
Nun kann der Packetfilter mit folgendem Befehl deactiviert werden:

#+BEGIN_SRC shell 
 pfctl -d   
#+END_SRC

[[./Pictures/pfSense_disable_firewall.png]]

Nun folgst du dem Installationsassistenten. Nach dem erneuten Neustart,
wiederholst die die Deaktivierung des Packetfilters.

Nun kannst du dich als Benutzer "admin" mit dem Passwort "pfsense" anmelden.
Erstelle unter dem Menüpunkt Firewall > Rules > WAN folgende Regeln:

[[./Pictures/pfSense_firewall_rules.png]]

*** Benutzer anlegen

Nun müssen wir unter [System -> User Manager -> User ->
Edit] einen unpriviligierten Benutzer mit dem Standard
Benutzernamen und Passwort anlegen, den wir für die
Konfiguration mit Ansible nutzen wollen: 

[[./Pictures/pfSense_create_user.png]]

*** Sudo installieren

Nun muss noch sudo installiert und konfiguriert werden.
Dazu gehen wir wie beim [[* Firewall Grundkonfiguration][deaktivieren der Firewall]] wieder auf
die Komandozeile der VM und geben folgenden Befehle ein:

#+BEGIN_SRC shell
pkg update
pkg upgrade
pkg install sudo
su -
#+END_SRC

Der letzte Befehl führt zurück ins "Hauptmenü", von woaus
wir mit '8' zurück auf die Komandozeile kommen. Nun können
wir den unpriviligierten Nutzer in die sudoers-Datei
eintragen:

#+BEGIN_SRC shell
visudo
#+END_SRC

Wir nutzen hier tatsächlich 'vi'. D. h. wir müssen zunächst
mit "i" in den Eingabemodus wechseln. Nun trägst du folgende
Zeile ein, wobei du den Benutzernamen anpasst:

#+BEGIN_SRC sudoers-Datei
user = ALL (ALL) ALL  
#+END_SRC

Mit "Z-Z" speicherst du und beendest vi.

!! Wahrscheinlich ist das Qwerty-Tastaturlayout
aktiviert. Also sind "Z" und "Y" gegenüber dem deutschen
Qwertz-Layout vertauscht !!

*** SSH aktivieren
Abschließend müssen wir unter [System -> Advance -> Admin
Access]  Ssh aktivieren:

[[./Pictures/pfSense_ssh_key.png]]


* SSH einrichten
** SSH-Schlüssel generieren und auf dem Server authorisieren

Nun müssen wir einen SSH-Schlüssel (siehe: [[https://man.archlinux.org/man/ssh-keygen.1.de][man ssh-keygen]]) erstellen, um uns
ohne Passwort auf den VMs anzumelden:  

#+BEGIN_SRC PS
wsl ssh-keygen -t ed25519 -b 4096 -f ~/.ssh/HyperV-VM
#+END_SRC

Dann laden wir ihn (siehe: [[https://man.archlinux.org/man/ssh-copy-id.1.de][man ssh-copy-id]])auf die Virtuelle Maschine
(Nutzername und IP anpassen): 

#+BEGIN_SRC PS
wsl ssh-copy-id -i ~/.ssh/HyperV-VM nutzer@192.168.13.56
#+END_SRC

** SSH-config Eintrag

Nun erstellen wir einen Eintrag in die [[https://man.archlinux.org/man/ssh_config.5.de][~/.ssh/config]]:

#+BEGIN_SRC PS
 wsl eval 'cat << \. >> ~/.ssh/config
>> Host template VM
>>      HostName           template
>>      User               Nutzer
>>      IdentityFile       ~/.ssh/HyperV-VM
>> .
>> '  
#+END_SRC

* Image als Template speichern 
Nun kannst du den Server herunterfahren und die virtuelle Festplatte nach ins
Templates-Unterverzeichnis kopieren:

#+BEGIN_SRC PS
   Move-Item .\VHD\*_tmp.vhdx .\Templates\
#+END_SRC

Dann kann die Virtuelle Maschine gelöscht werden.

